
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: lkeclusterclasses.container.linode.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .specTemplate.providerRef.name
    name: PROVIDER-REF
    type: string
  - JSONPath: .specTemplate.reclaimPolicy
    name: RECLAIM-POLICY
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: container.linode.crossplane.io
  names:
    categories:
    - crossplane
    - class
    - linode
    kind: LKEClusterClass
    listKind: LKEClusterClassList
    plural: lkeclusterclasses
    singular: lkeclusterclass
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: A LKEClusterClass is a resource class. It defines the desired spec
        of resource claims that use it to dynamically provision a managed resource.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        specTemplate:
          description: SpecTemplate is a template for the spec of a dynamically provisioned
            LKECluster.
          properties:
            label:
              type: string
            node_pools:
              items:
                description: A LKEClusterPool is a managed resource that represents
                  a Linode Kubernetes Engine node pool.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: A LKEClusterPoolSpec defines the desired state of
                      a LKEClusterPool.
                    properties:
                      claimRef:
                        description: ClaimReference specifies the resource claim to
                          which this managed resource will be bound. ClaimReference
                          is set automatically during dynamic provisioning. Crossplane
                          does not currently support setting this field manually,
                          per https://github.com/crossplane/crossplane-runtime/issues/19
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      classRef:
                        description: ClassReference specifies the resource class that
                          was used to dynamically provision this managed resource,
                          if any. Crossplane does not currently support setting this
                          field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      forProvider:
                        description: LKEClusterPoolParameters define the desired state
                          of a Linode Kubernetes Engine node pool.
                        properties:
                          cluster:
                            description: 'Cluster: The LKE Cluster ID for the LKE
                              cluster to which the LKEClusterPool will attach. Must
                              be of format Must be supplied if ClusterRef is not.'
                            type: string
                          clusterRef:
                            description: ClusterRef sets the Cluster field by resolving
                              the resource link of the referenced Crossplane LKECluster
                              managed resource. Must be supplied in Cluster is not.
                            properties:
                              name:
                                description: Name of the referenced object.
                                type: string
                            required:
                            - name
                            type: object
                          clusterSelector:
                            description: ClusterSelector selects a reference to resolve
                              the resource link of the referenced Crossplane LKECluster
                              managed resource.
                            properties:
                              matchControllerRef:
                                description: MatchControllerRef ensures an object
                                  with the same controller reference as the selecting
                                  object is selected.
                                type: boolean
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: MatchLabels ensures an object with matching
                                  labels is selected.
                                type: object
                            type: object
                          count:
                            description: The number of nodes in the Node Pool.
                            type: integer
                          type:
                            description: A Linode Type for all of the nodes in the
                              Node Pool.
                            type: string
                        type: object
                      providerRef:
                        description: ProviderReference specifies the provider that
                          will be used to create, observe, update, and delete this
                          managed resource.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      reclaimPolicy:
                        description: ReclaimPolicy specifies what will happen to this
                          managed resource when its resource claim is deleted, and
                          what will happen to the underlying external resource when
                          the managed resource is deleted. The "Delete" policy causes
                          the managed resource to be deleted when its bound resource
                          claim is deleted, and in turn causes the external resource
                          to be deleted when its managed resource is deleted. The
                          "Retain" policy causes the managed resource to be retained,
                          in binding phase "Released", when its resource claim is
                          deleted, and in turn causes the external resource to be
                          retained when its managed resource is deleted. The "Retain"
                          policy is used when no policy is specified.
                        enum:
                        - Retain
                        - Delete
                        type: string
                      writeConnectionSecretToRef:
                        description: WriteConnectionSecretToReference specifies the
                          namespace and name of a Secret to which any connection details
                          for this managed resource should be written. Connection
                          details frequently include the endpoint, username, and password
                          required to connect to the managed resource.
                        properties:
                          name:
                            description: Name of the secret.
                            type: string
                          namespace:
                            description: Namespace of the secret.
                            type: string
                        required:
                        - name
                        - namespace
                        type: object
                    required:
                    - forProvider
                    - providerRef
                    type: object
                  status:
                    description: A LKEClusterPoolStatus represents the observed state
                      of a LKEClusterPool.
                    properties:
                      atProvider:
                        description: LKEClusterPoolObservation is used to show the
                          observed state of the LKE Node Pool resource on Linode.
                        properties:
                          count:
                            description: The number of nodes in the Node Pool.
                            type: integer
                          id:
                            description: The Node Pool's unique ID.
                            type: integer
                          nodes:
                            description: Status information for the Nodes which are
                              members of this Node Pool. If a Linode has not been
                              provisioned for a given Node slot, the instance_id will
                              be returned as null.
                            items:
                              description: LKEClusterPoolLinode represents a LKEClusterPoolLinode
                                object
                              properties:
                                id:
                                  type: string
                                instance_id:
                                  type: integer
                                status:
                                  description: LKELinodeStatus constants start with
                                    LKELinode and include Linode API LKEClusterPool
                                    Linode Status values
                                  type: string
                              required:
                              - id
                              - instance_id
                              - status
                              type: object
                            type: array
                          type:
                            description: The Linode Type for all nodes in the Node
                              Pool
                            type: string
                        type: object
                      bindingPhase:
                        description: Phase represents the binding phase of a managed
                          resource or claim. Unbindable resources cannot be bound,
                          typically because they are currently unavailable, or still
                          being created. Unbound resource are available for binding,
                          and Bound resources have successfully bound to another resource.
                        enum:
                        - Unbindable
                        - Unbound
                        - Bound
                        - Released
                        type: string
                      conditions:
                        description: Conditions of the resource.
                        items:
                          description: A Condition that may apply to a resource.
                          properties:
                            lastTransitionTime:
                              description: LastTransitionTime is the last time this
                                condition transitioned from one status to another.
                              format: date-time
                              type: string
                            message:
                              description: A Message containing details about this
                                condition's last transition from one status to another,
                                if any.
                              type: string
                            reason:
                              description: A Reason for this condition's last transition
                                from one status to another.
                              type: string
                            status:
                              description: Status of this condition; is it currently
                                True, False, or Unknown?
                              type: string
                            type:
                              description: Type of this condition. At most one of
                                each condition type may apply to a resource at any
                                point in time.
                              type: string
                          required:
                          - lastTransitionTime
                          - reason
                          - status
                          - type
                          type: object
                        type: array
                    type: object
                required:
                - spec
                type: object
              type: array
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete managed resources that are
                dynamically provisioned using this resource class.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to managed resources
                dynamically provisioned using this class when their resource claims
                are deleted, and what will happen to their underlying external resource
                when they are deleted. The "Delete" policy causes the managed resource
                to be deleted when its bound resource claim is deleted, and in turn
                causes the external resource to be deleted when its managed resource
                is deleted. The "Retain" policy causes the managed resource to be
                retained, in binding phase "Released", when its resource claim is
                deleted, and in turn causes the external resource to be retained when
                its managed resource is deleted. The "Retain" policy is used when
                no policy is specified, however the "Delete" policy is set at dynamic
                provisioning time if no policy is set.
              enum:
              - Retain
              - Delete
              type: string
            region:
              type: string
            tags:
              items:
                type: string
              type: array
            version:
              type: string
            writeConnectionSecretsToNamespace:
              description: WriteConnectionSecretsToNamespace specifies the namespace
                in which the connection secrets of managed resources dynamically provisioned
                using this claim will be created.
              type: string
          required:
          - label
          - node_pools
          - providerRef
          - region
          - version
          - writeConnectionSecretsToNamespace
          type: object
      required:
      - specTemplate
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
